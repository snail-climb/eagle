import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as t,c as o,d as a}from"./app-MrYqimkW.js";const n={},i=a('<h1 id="maven依赖作用范围" tabindex="-1"><a class="header-anchor" href="#maven依赖作用范围"><span>Maven依赖作用范围</span></a></h1><h2 id="_1-compile-默认" tabindex="-1"><a class="header-anchor" href="#_1-compile-默认"><span>1. compile（默认）</span></a></h2><blockquote><p>依赖项在所有阶段（编译、测试、运行）都可见和可用。<br> 依赖项会被包含在最终的构建产物（例如JAR文件）中。</p></blockquote><h2 id="_2-provided" tabindex="-1"><a class="header-anchor" href="#_2-provided"><span>2. provided</span></a></h2><blockquote><p>依赖项由目标环境或容器提供，在编译和测试时可见，但在运行时由目标环境提供。<br> 依赖项不会被包含在最终的构建产物中，因为目标环境已经提供了它们。</p></blockquote><h2 id="_3-runtime" tabindex="-1"><a class="header-anchor" href="#_3-runtime"><span>3. runtime</span></a></h2><blockquote><p>依赖项在运行时可见和可用，但在编译时不需要。<br> 依赖项不会被包含在最终的构建产物中。</p></blockquote><h2 id="_4-test" tabindex="-1"><a class="header-anchor" href="#_4-test"><span>4. test</span></a></h2><blockquote><p>依赖项仅在测试阶段可见和可用，不会影响编译和运行阶段。<br> 通常用于编写单元测试或集成测试时所需的依赖项。</p></blockquote><h2 id="_5-system" tabindex="-1"><a class="header-anchor" href="#_5-system"><span>5. system</span></a></h2><blockquote><p>依赖项类似于provided作用域，但需要通过systemPath属性指定其路径。<br> 依赖项不会被Maven仓库管理，而是通过指定的路径直接引用。</p></blockquote><h2 id="_6-import" tabindex="-1"><a class="header-anchor" href="#_6-import"><span>6. import</span></a></h2><blockquote><p>仅适用于<code>&lt;dependencyManagement&gt;</code>部分，用于导入其他项目的依赖管理信息。<br> 不会实际引入依赖项，而是从导入的项目中继承依赖管理信息。</p></blockquote>',13),l=[i];function r(s,c){return t(),o("div",null,l)}const h=e(n,[["render",r],["__file","maven-scope.html.vue"]]),m=JSON.parse('{"path":"/note/basic/maven-scope.html","title":"Maven依赖作用范围","lang":"zh-CN","frontmatter":{"isOriginal":true,"category":"基础","tag":"概念"},"headers":[{"level":2,"title":"1. compile（默认）","slug":"_1-compile-默认","link":"#_1-compile-默认","children":[]},{"level":2,"title":"2. provided","slug":"_2-provided","link":"#_2-provided","children":[]},{"level":2,"title":"3. runtime","slug":"_3-runtime","link":"#_3-runtime","children":[]},{"level":2,"title":"4. test","slug":"_4-test","link":"#_4-test","children":[]},{"level":2,"title":"5. system","slug":"_5-system","link":"#_5-system","children":[]},{"level":2,"title":"6. import","slug":"_6-import","link":"#_6-import","children":[]}],"git":{"createdTime":1710603610000,"updatedTime":1710603610000,"contributors":[{"name":"Forrest","email":"workmail20201112@gmail.com","commits":1}]},"readingTime":{"minutes":1.04,"words":313},"filePathRelative":"note/basic/maven-scope.md","localizedDate":"2024年3月16日","excerpt":"\\n<h2>1. compile（默认）</h2>\\n<blockquote>\\n<p>依赖项在所有阶段（编译、测试、运行）都可见和可用。<br>\\n依赖项会被包含在最终的构建产物（例如JAR文件）中。</p>\\n</blockquote>\\n<h2>2. provided</h2>\\n<blockquote>\\n<p>依赖项由目标环境或容器提供，在编译和测试时可见，但在运行时由目标环境提供。<br>\\n依赖项不会被包含在最终的构建产物中，因为目标环境已经提供了它们。</p>\\n</blockquote>\\n<h2>3. runtime</h2>\\n<blockquote>\\n<p>依赖项在运行时可见和可用，但在编译时不需要。<br>\\n依赖项不会被包含在最终的构建产物中。</p>\\n</blockquote>"}');export{h as comp,m as data};
